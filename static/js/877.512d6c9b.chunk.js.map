{"version":3,"file":"static/js/877.512d6c9b.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACNF,EAAAA,EAAAA,IAAA,qCAAwCC,IADlC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAY,mCAAG,WAAOC,GAAP,uFACDN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oBAAiCL,EAAjC,oBADC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZG,EAAqB,mCAAG,WAAOC,GAAP,uFACVR,EAAAA,EAAAA,IAAA,+BACKC,EADL,iCACqCO,EADrC,gCADU,cAC3BL,EAD2B,yBAG1BA,EAASC,MAHiB,2CAAH,sDAMrBK,EAAY,mCAAG,WAAOH,GAAP,uFACDN,EAAAA,EAAAA,IAAA,gBACVM,EADU,4BACYL,EADZ,oBADC,cAClBE,EADkB,yBAGjBA,EAASC,MAHQ,2CAAH,sDAMZM,EAAU,mCAAG,WAAOJ,GAAP,uFACCN,EAAAA,EAAAA,IAAA,gBACVM,EADU,4BACYL,EADZ,2BADD,cAChBE,EADgB,yBAGfA,EAASC,MAHM,2CAAH,qD,4HCYvB,EAnCa,WACT,OAAkCO,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACNH,EAAU,YAEVN,EAAAA,EAAAA,IAAaO,GACRG,MAAK,SAAAC,GACFP,EAAaO,EAAKA,MAClBL,EAAU,WACb,IACAM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACnB,GAAE,CAACN,KAGA,yBACgB,YAAXF,GACK,SAACW,EAAA,EAAD,KACC,eAAIC,MAAO,CAAEC,UAAW,QAAxB,SACMf,EAAUgB,KAAI,gBAAEtB,EAAF,EAAEA,GAAIuB,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,aAAvB,OACX,2BACI,gBAAKC,IAAKD,GAAY,yCAAsCA,GAAgBE,IAAKJ,EAAMK,MAAM,SAC7F,wBAAG,uBAAIL,OACP,uCAAeC,OAHVxB,EADE,OAYtC,C","sources":["Services/Api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '3123e8450e42b4706d786efbc6b96d51';\n\nexport const GetTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n}\n\nexport const GetMovieById = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n} \n\nexport const GetMovieBySearchQuery = async (searchQuery) => {\n    const response = await axios.get(\n        `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`);\n    return response.data;\n} \n\nexport const GetMovieCast = async (id) => {\n    const response = await axios.get(\n        `movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const GetReviews = async (id) => {\n    const response = await axios.get(\n        `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { GetMovieCast } from \"../../Services/Api\";\nimport Loader from \"components/Loader\";\n\nconst Cast = () => {\n    const [movieCast, setMovieCast] = useState([]);\n    const [status, setStatus] = useState('idle')\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setStatus('panding')\n\n        GetMovieCast(movieId)\n            .then(cast => {\n                setMovieCast(cast.cast);\n                setStatus('resolved');\n            })\n            .catch(error => console.log(error));\n    }, [movieId]);\n\n    return (\n        <div>\n            {status === 'panding'\n                ? <Loader />\n                : (<ul style={{ listStyle: \"none\" }}>\n                        {movieCast.map(({id, name, character, profile_path}) => (\n                            <li key={id}>\n                                <img src={profile_path && `https://image.tmdb.org/t/p/w500${profile_path}`} alt={name} width=\"120\" />\n                                <p><b>{name}</b></p>\n                                <p>Character: {character}</p>\n\n                            </li>\n                        ))}\n                    </ul>)\n            }\n        </div>        \n    )\n}\n\nexport default Cast;"],"names":["axios","API_KEY","GetTrendingMovies","response","data","GetMovieById","id","GetMovieBySearchQuery","searchQuery","GetMovieCast","GetReviews","useState","movieCast","setMovieCast","status","setStatus","movieId","useParams","useEffect","then","cast","catch","error","console","log","Loader","style","listStyle","map","name","character","profile_path","src","alt","width"],"sourceRoot":""}